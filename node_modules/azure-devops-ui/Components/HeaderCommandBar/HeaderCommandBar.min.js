import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./HeaderCommandBar.css";import*as React from"react";import{ObservableArray,ObservableLike}from"../../Core/Observable";import{Button}from"../../Button";import{MenuButton,MoreButton}from"../../Menu";import{css}from"../../Util";import{FILTER_CHANGE_EVENT}from"../../Utilities/Filter";import{CustomHeaderCommandBar}from"./CustomHeaderCommandBar";import{getFilterItem}from"./Items";var headerCommandBarId=1,HeaderCommandBar=function(e){function t(t){var r=e.call(this,t)||this;return r.buttonRefs={},r.menuButtonId="header-command-bar-menu-button"+headerCommandBarId++,r}return tslib_1.__extends(t,e),t.prototype.render=function(){var e=this,t=this.props.items;this.buttonRefs={};for(var r,o=[],a=[],n=3-t.filter(function(e){return!0===e.important}).length,s=!1,i=0;i<t.length;i++){var m=t[i];if(1===m.itemType)r=m;else{var l=void 0;m.important?(s=!(!m.iconProps||m.text),l=o):n>0&&void 0===m.important?(n--,s=!(!m.iconProps||m.text),l=o):l=a,r&&l.length&&l.push(r),l.push(m),r=void 0}}var u=o.length+(a.length>0?1:0),c=!o.length||"button"!==o[0].role;s=s||a.length>0;var d=React.createElement(React.Fragment,null,o.map(function(t,r){var o=t.id;if(1===t.itemType)return React.createElement("div",{className:"bolt-header-command-item-separator",key:o});var a={ariaChecked:ObservableLike.getValue(t.checked),ariaLabel:t.ariaLabel,ariaPosInSet:c?r+1:void 0,ariaSetSize:c?u:void 0,className:css(t.className,"bolt-header-command-item-button"),disabled:t.disabled,href:t.href,iconProps:t.iconProps,id:o,primary:t.isPrimary,role:t.role||"menuitem",subtle:t.subtle,target:t.target,text:t.text,tooltipProps:t.tooltipProps},n=Button,s=React.createRef();return e.buttonRefs[o]=s,t.subMenuProps?(a.contextualMenuProps={menuProps:t.subMenuProps},a.hideDropdownIcon=t.hideDropdownIcon,n=MenuButton):a.onClick=function(e){return t.onActivate&&t.onActivate(t,e)},React.createElement(n,tslib_1.__assign({},a,{key:o,ref:s}))}),a.length>0&&React.createElement(MoreButton,{ariaPosInSet:o.length+1,ariaSetSize:u,className:"bolt-header-command-item-button",contextualMenuProps:{menuProps:{id:"header-submenu",items:new ObservableArray(a)},className:this.props.overflowClassName},id:this.menuButtonId,role:"menuitem",subtle:!1}));if(t.length>0){var p=o.find(function(e){return!e.disabled});return React.createElement(CustomHeaderCommandBar,{className:this.props.className,focusGroupProps:{defaultElementId:p?p.id:this.menuButtonId},lastItemIsIconButton:!0,role:c?"menubar":void 0},d)}return null},t.prototype.focus=function(e){var t=this.buttonRefs[e.commandBarItemId];t&&t.current&&t.current.focus()},t}(React.Component);export{HeaderCommandBar};var HeaderCommandBarWithFilter=function(e){function t(t){var r=e.call(this,t)||this;return r.headerCommandBarRef=React.createRef(),r.onFilterClicked=function(){r.props.filterToggled.value=!r.props.filterToggled.value},r.onFilterChanged=function(){var e=r.props.filter.hasChangesToReset();e!==r.state.filterHasChanges&&r.setState({filterHasChanges:e})},r.state={filterHasChanges:r.props.filter.hasChangesToReset()},r}return tslib_1.__extends(t,e),t.prototype.componentDidMount=function(){this.props.filter.subscribe(this.onFilterChanged,FILTER_CHANGE_EVENT)},t.prototype.componentWillUnmount=function(){this.props.filter.unsubscribe(this.onFilterChanged,FILTER_CHANGE_EVENT)},t.prototype.render=function(){var e=this.props.items?this.props.items.slice():[];return e.push(getFilterItem(this.onFilterClicked,this.state.filterHasChanges)),React.createElement(HeaderCommandBar,tslib_1.__assign({},this.props,{items:e,ref:this.headerCommandBarRef}))},t.prototype.focus=function(e){this.headerCommandBarRef.current&&this.headerCommandBarRef.current.focus(e)},t}(React.Component);export{HeaderCommandBarWithFilter};