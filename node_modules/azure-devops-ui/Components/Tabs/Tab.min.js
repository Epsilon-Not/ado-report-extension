import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Tabs.css";import*as React from"react";import{TabBadge}from"./TabBadge";import{FocusGroupContext}from"../../FocusGroup";import{FocusZoneContext}from"../../FocusZone";import{Icon}from"../../Icon";import{Observer}from"../../Observer";import{Tooltip}from"../../TooltipEx";import{css,getSafeId}from"../../Util";import{getFriendlyDisplayValue}from"../../Utilities/FriendlyNumber";var Tab=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.onClick=function(e){var o=t.props.url,r=!0;e.ctrlKey&&o&&(r=!1),r&&(e.preventDefault(),t.updateSelectedItem(e))},t.onKeyDown=function(e){e.defaultPrevented||32!==e.which&&13!==e.which||(e.preventDefault(),t.updateSelectedItem(e))},t}return tslib_1.__extends(t,e),t.prototype.render=function(){var e=this,t=this.props,o=t.ariaLabel,r=t.index,n=t.setSize,a=t.iconProps,i=t.id,s=t.isSelected,l=t.renderBadge,c=t.url,p=c?"a":"div";return React.createElement(Observer,{name:this.props.name,badgeCount:this.props.badgeCount},function(t){var u=t.name;return React.createElement(FocusGroupContext.Consumer,null,function(m){return React.createElement(FocusZoneContext.Consumer,null,function(d){var f=l?l():e.renderBadge(t.badgeCount),b=void 0!==a&&Icon(tslib_1.__assign({className:"bolt-tab-icon"},a)),v={text:u,overflowOnly:!0},h=u&&React.createElement("span",{className:"bolt-tab-text","data-content":u},u);return b&&!h&&o&&(v.text=o,v.overflowOnly=!1),React.createElement(Tooltip,tslib_1.__assign({},v),React.createElement(p,{"aria-label":o,"aria-posinset":void 0!==r?r+1:void 0,"aria-selected":s,"aria-setsize":n,className:css(e.props.className,"bolt-tab focus-treatment flex-noshrink",s&&"selected"),"data-focuszone":d.focuszoneId,href:c,id:getSafeId("tab-"+i),key:i,onClick:e.onClick,onKeyDown:e.onKeyDown,role:"tab",tabIndex:m.focusedElementId==="tab-"+i?0:-1},React.createElement("span",{className:"bolt-tab-inner-container"},b,h,f)))})})})},t.prototype.renderBadge=function(e){var t=void 0!==e?getFriendlyDisplayValue(e):void 0,o=void 0;e&&t!==e.toString()&&(o=e.toString());var r=null;if(t){var n=o?{text:o}:void 0;r=React.createElement(TabBadge,{tooltipProps:n},t)}return r},t.prototype.updateSelectedItem=function(e){var t=this.props.onClick;e&&this.props.onBeforeTabChange&&!this.props.onBeforeTabChange(e,this.props.id,this.props.url)?e.preventDefault():t&&t(this.props.id)},t}(React.Component);export{Tab};