import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./EditableDropdown.css";import*as React from"react";import{ObservableArray,ObservableLike,ObservableValue}from"../../Core/Observable";import{TimerManagement}from"../../Core/TimerManagement";import{Dropdown,DropdownCallout,DropdownExpandableTextField,filterItems}from"../../Dropdown";import{renderListBoxCell}from"../../ListBox";import{Observer}from"../../Observer";import*as Resources from"../../Resources.Dropdown";import{css}from"../../Util";import{DropdownSelection}from"../../Utilities/DropdownSelection";import{EditableDropdownItemProvider}from"../../Utilities/EditableDropdownItemProvider";import{renderHighlightedText}from"../Dropdown/Dropdown";var CustomEditableDropdown=function(e){function t(t){var r=e.call(this,t)||this;if(r.dropdown=React.createRef(),r.listBox=React.createRef(),r.filteredIndexMap=new ObservableValue([]),r.filterMatches=[],r.collapse=function(){r.dropdown.current&&r.dropdown.current.collapse()},r.expand=function(){r.dropdown.current&&r.dropdown.current.expand()},r.renderItem=function(e,t,n,o){return React.createElement(Observer,{focusedIndex:{observableValue:r.focusedIndex,filter:function(){var t=r.filteredIndexMap.value[e];return t===r.focusedIndex.value||t===r.previousFocusedIndex}},key:o.id},function(){var i=r.filteredIndexMap.value[e]===r.focusedIndex.value?tslib_1.__assign({},o,{className:css(o.className,"bolt-editable-dropdown-focused-item")}):tslib_1.__assign({},o),l=r.filterMatches[e];return!i.render&&l&&l.length&&(i.render=function(e,t,r,n){return renderHighlightedText(e,t,r,n,l)}),r.props.renderItem(e,t,n,i)})},r.onCollapse=function(){var e=r.props,t=e.allowFreeform,n=e.autoAccept,o=e.onCollapse,i=e.onTextChange,l=e.onValueChange,s=e.text;if(o&&o(),!r.selectedItemInList){var a=r.itemProvider.value.findIndex(function(e,t){return r.selection.selectable(t)&&e.text===ObservableLike.getValue(s||"")});a>-1&&r.selectIndex(a)}var d=r.itemProvider.length-1;if(!t||r.selection.value.length&&r.selection.value[0].beginIndex!==d&&r.selectedItemInList||!r.itemProvider.hasExtraItem){if(r.selection.value.length){var u=r.itemProvider.value[r.selection.value[0].beginIndex];l&&l(u)}}else{if(n||r.selectedItemInList){var c=r.itemProvider.value[d].id;l&&l({id:c,text:c})}r.selection.clear()}i&&i(null,""),r.isExpanded=!1,r.selectedItemInList=!1},r.onItemsChange=function(e,t){"change"!==t&&r.filterItems()},r.onSelect=function(e,t){r.selectedItemInList=!0},r.renderExpandable=function(e){return React.createElement(Observer,{focusedIndex:r.focusedIndex,text:r.props.text},function(t){var n,o=r.props.onTextChange,i=t.focusedIndex,l=t.text;i>-1&&r.itemProvider.value[i]&&(n=r.itemProvider.value[i].id);var s=tslib_1.__assign({},e,{ariaActiveDescendant:n,editable:!0,showPrefix:!l,blurDismiss:!0,onChange:o,onKeyDown:r.onKeyDown,value:l});return r.props.renderExpandable(s)})},r.renderCallout=function(e){var t=tslib_1.__assign({},e,{focusOnMount:!1,excludeTabStop:!0,excludeFocusZone:!0,ignoreMouseDown:!0,listBoxRef:r.listBox});return r.props.renderCallout(t)},r.onExpand=function(){if(r.props.onExpand&&r.props.onExpand(),r.props.filterItems){var e=r.props.filterItems("",r.itemProvider.value),t=r.updateFilteredIndexMap(e.filteredIndexMap);r.filteredItems.value=e.filteredItems,r.focusItem(t)}else{r.filteredItems.value=r.itemProvider.value;var n=r.updateFilteredIndexMap(r.filteredItems.value.map(function(e,t){return t}));r.focusItem(n)}r.isExpanded=!0},r.onValueChange=function(){var e=ObservableLike.getValue(r.props.text||"");return r.props.allowFreeform&&(r.itemProvider.hasExtraItem&&r.filteredItems.pop(),r.itemProvider.setTextValue(e)),r.filterItems(),!1},r.filterItems=function(){var e,t=r.itemProvider.value,n=ObservableLike.getValue(r.props.text||"");e=r.props.filterItems?r.props.filterItems(n,t):n?filterItems(t,n,[],r.props.filterItem):{filteredItems:t,filteredIndexMap:t.map(function(e,t){return t}),filterMatches:[]},r.filterMatches=e.filterMatches;var o=r.updateFilteredIndexMap(e.filteredIndexMap);r.filteredItems.value=e.filteredItems,r.focusItem(o)},r.onKeyDown=function(e){switch(e.which){case 27:r.collapse(),e.preventDefault();break;case 13:r.isExpanded||(r.expand(),e.preventDefault());case 9:r.isExpanded&&!e.shiftKey&&r.filteredItems.length&&(r.selectIndex(r.focusedIndex.value),r.collapse(),e.preventDefault());break;case 38:r.isExpanded&&(r.focusPreviousItem(),r.listBox.current&&r.listBox.current.scrollIntoView(r.filteredIndexMap.value.indexOf(r.focusedIndex.value),{block:"nearest"})),e.preventDefault();break;case 40:r.isExpanded?(r.focusNextItem(),r.listBox.current&&r.listBox.current.scrollIntoView(r.filteredIndexMap.value.indexOf(r.focusedIndex.value),{block:"nearest"})):r.isExpanded||r.expand(),e.preventDefault();break;case 46:case 8:ObservableLike.getValue(r.props.text||"")||(r.selection.clear(),r.props.onValueChange&&r.props.onValueChange());break;default:r.expand()}},r.selection=t.selection||new DropdownSelection,r.itemProvider=new EditableDropdownItemProvider(t.items,r.selection),r.filteredItems=new ObservableArray(r.itemProvider.value.slice()),r.focusedIndex=new ObservableValue(-1),r.previousFocusedIndex=-1,r.timerManagement=new TimerManagement,r.filteredIndexMap.value=r.itemProvider.value.map(function(e,t){return t}),r.props.selectedText){var n=ObservableLike.getValue(r.props.selectedText);if(n){var o=r.itemProvider.value.findIndex(function(e){return e.text===n});o>-1&&r.selection.select(o)}}return $DEBUG&&r.selection.multiSelect&&console.warn("multiselect selection is being used, EditableDropdown does not support multiselect"),r}return tslib_1.__extends(t,e),t.prototype.render=function(){var e=this,t=this.props,r=t.ariaLabel,n=t.calloutContentClassName,o=t.className,i=t.disabled,l=t.filterByText,s=t.getUnselectableRanges,a=t.noItemsText,d=t.selectedText,u=t.text;return React.createElement(Observer,{text:{observableValue:u,filter:this.onValueChange},items:{observableValue:this.itemProvider,filter:this.onItemsChange},selection:this.selection,selectedText:d},function(t){var d=e.props.placeholder;if(t.selectedText)d=t.selectedText;else if(t.selection.length){var u=t.selection[0].beginIndex;d=e.itemProvider.value[u].text}return React.createElement(Dropdown,{ariaLabel:r,calloutContentClassName:n,className:css("bolt-editable-dropdown",(t.selection.length>0||!!t.selectedText)&&"bolt-editable-dropdown-with-selection",o),disabled:i,getUnselectableRanges:s,filterByText:l,items:e.itemProvider,noItemsText:a||Resources.NoItemsFound,onCollapse:e.onCollapse,onExpand:e.onExpand,onSelect:e.onSelect,placeholder:d,ref:e.dropdown,renderCallout:e.renderCallout,renderExpandable:e.renderExpandable,renderItem:e.renderItem,selection:e.selection,showFilterBox:!1,userFilteredItems:e.filteredItems,userFilteredItemsIndexMap:e.filteredIndexMap})})},t.prototype.componentDidMount=function(){this.props.filterThrottleWait&&(this.filterItems=this.timerManagement.debounce(this.filterItems,this.props.filterThrottleWait))},t.prototype.focus=function(){this.dropdown.current&&this.dropdown.current.focus()},t.prototype.selectIndex=function(e){e>-1&&(this.selection.select(e),this.selectedItemInList=!0)},t.prototype.focusItem=function(e){void 0!==e&&e>-1&&(this.previousFocusedIndex=this.focusedIndex.value,this.focusedIndex.value=e)},t.prototype.updateFilteredIndexMap=function(e){var t=this,r=this.filteredIndexMap.value.indexOf(this.focusedIndex.value);this.filteredIndexMap.value=e;var n=e[r];return(!n||n<0||!this.selection.selectable(n)||-1===this.filteredIndexMap.value.indexOf(n))&&(n=this.filteredIndexMap.value.find(function(e){return t.selection.selectable(e)})),n},t.prototype.focusNextItem=function(){for(var e,t=this.filteredIndexMap.value.indexOf(this.focusedIndex.value)+1;t<this.filteredIndexMap.value.length;t++)if(this.selection.selectable(this.filteredIndexMap.value[t])){e=this.filteredIndexMap.value[t];break}this.focusItem(e)},t.prototype.focusPreviousItem=function(){for(var e,t=this.filteredIndexMap.value.indexOf(this.focusedIndex.value)-1;t>=0;t--)if(this.selection.selectable(this.filteredIndexMap.value[t])){e=this.filteredIndexMap.value[t];break}this.focusItem(e)},t.defaultProps={autoAccept:!0,renderExpandable:DropdownExpandableTextField,renderCallout:DropdownCallout,renderItem:renderListBoxCell},t}(React.Component);export{CustomEditableDropdown};