function overflowDetected(t){return t.scrollWidth>Math.ceil(t.offsetWidth)}import*as tslib_1 from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Tooltip.css";import*as React from"react";import{Callout}from"../../Callout";import{FocusWithin}from"../../FocusWithin";import{css,getFocusVisible,getSafeId,Mouse}from"../../Util";export var TooltipStatus;!function(t){t[t.hidden=0]="hidden",t[t.visible=1]="visible",t[t.fadingout=2]="fadingout"}(TooltipStatus||(TooltipStatus={}));var tooltipId=1,Tooltip=function(t){function o(o){var e=t.call(this,o)||this;return e.openTimeout=-1,e.tooltipId="tooltip-"+tooltipId++,e.focus=!1,e.mouse=!1,e.onBlur=function(){e.focus=!1,e.mouse||1!==e.state.tooltipStatus||e.setState({tooltipStatus:e.getDismissStatus()}),e.existingBlur&&e.existingBlur()},e.onFocus=function(t){var o=t.currentTarget;e.shouldShowTooltip(o)&&(e.focus=!0,getFocusVisible()&&e.setState({anchorElement:t.target,anchorOffset:{horizontal:0,vertical:8},anchorOrigin:{horizontal:"center",vertical:"end"},anchorPoint:void 0,innerText:e.props.overflowOnly&&!e.props.text?o.innerText:void 0,tooltipStatus:1,tooltipOrigin:{horizontal:"center",vertical:"start"}})),e.existingFocus&&e.existingFocus(t)},e.onMouseEnter=function(t){var o=t.currentTarget;e.shouldShowTooltip(o)&&-1===e.openTimeout&&(e.openTimeout=window.setTimeout(function(){e.openTimeout=-1;var t;e.props.anchorOrigin||(t=Mouse.position),e.mouse=!0,e.setState({anchorElement:o,anchorOffset:{horizontal:8,vertical:8},anchorOrigin:{horizontal:"center",vertical:"end"},anchorPoint:t,innerText:e.props.overflowOnly&&!e.props.text?o.innerText:void 0,tooltipStatus:1,tooltipOrigin:{horizontal:"start",vertical:"start"}})},e.props.delayMs)),e.existingMouseEnter&&e.existingMouseEnter(t)},e.onMouseLeave=function(t){-1!==e.openTimeout&&(window.clearTimeout(e.openTimeout),e.openTimeout=-1),e.mouse=!1,e.focus&&getFocusVisible()||1!==e.state.tooltipStatus||e.setState({tooltipStatus:e.getDismissStatus()}),e.existingMouseLeave&&e.existingMouseLeave(t)},e.onAnimationEnd=function(){2===e.state.tooltipStatus&&e.setState({tooltipStatus:0})},e.getDismissStatus=function(){return e.props.disabled?0:2},e.shouldShowTooltip=function(t){return!(e.props.overflowOnly&&!e.overflowDetected(t))&&(!!(e.props.text||e.props.renderContent||t.innerText&&e.props.overflowOnly)&&!e.props.disabled)},e.overflowDetected=o.overflowDetected||overflowDetected,e.state={tooltipStatus:0},e}return tslib_1.__extends(o,t),o.prototype.render=function(){var t=React.Children.only(this.props.children),o=this.props.id||this.tooltipId;this.existingMouseEnter=t.props.onMouseEnter,this.existingMouseLeave=t.props.onMouseLeave;var e=this.props.addAriaDescribedBy&&0!==this.state.tooltipStatus?getSafeId(o):void 0,i=tslib_1.__assign({},t.props,{onMouseEnter:this.onMouseEnter,onMouseLeave:this.onMouseLeave});void 0===i["aria-describedby"]&&(i["aria-describedby"]=e);var s=React.cloneElement(t,i,t.props.children);return this.props.showOnFocus&&(this.props.text||this.props.renderContent||this.props.overflowOnly)&&(this.existingBlur=t.props.onBlur,this.existingFocus=t.props.onFocus,s=React.createElement(FocusWithin,{onBlur:this.onBlur,onFocus:this.onFocus,updateStateOnFocusChange:!1},s)),React.createElement(React.Fragment,null,s,0!==this.state.tooltipStatus&&!this.props.disabled&&this.state.anchorElement?React.createElement(Callout,{anchorElement:this.state.anchorElement,anchorOffset:this.props.anchorOffset||this.state.anchorOffset,anchorOrigin:this.props.anchorOrigin||this.state.anchorOrigin,anchorPoint:this.state.anchorPoint,calloutOrigin:this.props.tooltipOrigin||this.state.tooltipOrigin,className:css(this.props.className,"bolt-tooltip",2===this.state.tooltipStatus&&"bolt-tooltip-fade-out"),fixedLayout:this.props.fixedLayout,id:o,key:o,onAnimationEnd:this.onAnimationEnd,portalProps:{className:"bolt-tooltip-portal"},role:"tooltip"},React.createElement("div",{className:"bolt-tooltip-content body-m"},this.props.renderContent&&this.props.renderContent()||this.props.text||this.state.innerText)):null)},o.prototype.componentWillUnmount=function(){-1!==this.openTimeout&&window.clearTimeout(this.openTimeout)},o.defaultProps={delayMs:250,showOnFocus:!0},o}(React.Component);export{Tooltip};